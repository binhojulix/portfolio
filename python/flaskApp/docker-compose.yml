version: "3.8"
services:
  app:
    container_name: app
    hostname: app
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5
    build: 
     context: app
    restart: unless-stopped
    links:
      - db
    ports:
      - "5005:5005"
    depends_on:
      - db
    volumes:
      - ./app:/app/
  db:
    image: postgres
    container_name: db_flask
    hostname: db_flask
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=valeEY
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/db:/docker-entrypoint-initdb.d/
      - ./postgres/data:/var/lib/postgresql/data
  nginx:
    restart: always
    container_name: nginx
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5
    hostname: nginx
    build: ./nginx/
    volumes:
      - ./nginx/sites-enabled:/usr/share/nginx/html/
    ports:
      - "81:81"
    links:
      - app

  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      networks: 
        - broker-kafka
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  

networks: 
  broker-kafka:
    driver: bridge  